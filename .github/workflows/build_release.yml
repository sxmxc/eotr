# This workflow handles building and exporting a Godot project for multiple platforms
# It triggers on version tags (v*.*.* format) and includes build numbers in the output
name: Release build

on: 
  push:
    tags:
      - 'v*.*.*.*'  # Triggers on semantic version tags like v1.0.0.0, v2.1.3.1, etc.

# Global environment variables used across all jobs
env:
  GODOT_VERSION: 4.4.1
  PROJECT_PATH: .
  GAME_NAME: eotr  # Set your game name here in snake_case format

jobs:
  # This job runs first to establish version information used by all build jobs
  set-version:
    name: Set Version
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      build_name: ${{ steps.get_version.outputs.build_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch complete history for accurate commit counting
          lfs: true
          
      - name: Generate Build Info
        id: get_version
        run: |
          # Extract version number from git tag (removes 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Generate build number from total commit count
          BUILD_NUMBER=$(git rev-list --count HEAD)
          
          # Create full build name combining game name, version, and build number
          BUILD_NAME="${GAME_NAME}-${VERSION}-build${BUILD_NUMBER}"
          
          # Make these values available to other jobs
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "build_name=$BUILD_NAME" >> "$GITHUB_OUTPUT"
          
          # Log the values for debugging
          echo "Version: $VERSION"
          echo "Build Number: $BUILD_NUMBER"
          echo "Full Build Name: $BUILD_NAME"

  # Windows Export Job
  export-windows:
    needs: set-version
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.4.1
    env:
      EXPORT_NAME: ${{ needs.set-version.outputs.build_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  # Linux Export Job
  export-linux:
    needs: set-version
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.4.1
    env:
      EXPORT_NAME: ${{ needs.set-version.outputs.build_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux
